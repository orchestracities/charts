# Default values for a crate deployment of 3 nodes.
# Chart consists of:
#   1) A Service (exposing the ports that crate uses)
#   2) A StatefulSet (initialising the cluster)
app: crate

image:
  name: crate
  tag: 4.6.7
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  annotations: {}
  adminName: crate-web
  adminPort: 4200
  clusterName: cluster
  clusterPort: 4300
  postgresName: postgres
  postgresPort: 5432


## Node selector
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
nodeSelector: {}

affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
    - labelSelector:
        matchExpressions:
        - key: app
          operator: In
          values:
          - crate
      topologyKey: "kubernetes.io/hostname"

tolerations: []

crate:
  clusterName: quantumleap
  # https://crate.io/docs/crate/reference/en/latest/config/environment.html#use-max-50-of-available-ram
  createHeapSize: 3g
  recoverAfterTime: 5m
  replicas: 1
  recoverAfterNodes: 1
  # minimumMasterNodes is only required for Crate versions prior to 4 and will
  # be ignored when using a 4.x image.
  minimumMasterNodes: 1

http:
  cors:
    enabled: true
    allowOrigin: "*"

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # requests:
  #   cpu: 300m
  #   memory: 2Gi
  # limits:
  #   cpu: 1000m
  #   memory: 5Gi

persistentVolume:
  enabled: false
  storageClass: default
  accessModes:
    - ReadWriteOnce
  size: 20Gi  # Per instance
  annotations: {}

backupVolume:
  # even if set to true, it'll be ignored if persistentVolume.enabled is false,
  # since in that case the container gets an emptyDir volume for database file
  # storage.
  enabled: false
  # instead of creating a new claim, reuse an exsting one (useful to migrate
  # data from a cluster to another)
  # existingClaim: "existingClaim"

  storageClass: retain
  # accessModes gets hard-coded to ReadWriteMany since Crate backup requires a
  # volume shared by **all** nodes in the cluster.
  size: 100Gi  # must cater for data of **all** nodes
  annotations: {}

# Readiness probe
readinessProbe:
  enabled: false
  initialDelaySeconds: 60
  timeoutSeconds: 1
  failureThreshold: 3
  periodSeconds: 60
  successThreshold: 1

# Liveness probe
livenessProbe:
  enabled: false
  initialDelaySeconds: 240
  timeoutSeconds: 5
  failureThreshold: 5
  periodSeconds: 10
  successThreshold: 1

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
