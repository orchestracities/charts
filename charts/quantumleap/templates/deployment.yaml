apiVersion: "apps/v1"
kind: Deployment
metadata:
  name: {{ template "quantumleap.fullname" . }}
  labels:
    app: {{ template "quantumleap.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "quantumleap.name" . }}
  replicas: {{ .Values.replicaCount }}
  strategy:
{{ toYaml .Values.updateStrategy | indent 4 }}
  template:
    metadata:
      annotations:
        chaos.alpha.kubernetes.io/enabled: "{{ .Values.chaos.enabled }}"
      labels:
        app: {{ template "quantumleap.name" . }}
        release: {{ .Release.Name }}
    spec:
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
    {{- if .Values.init }}
      initContainers:
        - name: init-postgresql
          image: "{{ .Values.init.image.repository }}:{{ .Values.init.image.tag }}"
          imagePullPolicy: {{ .Values.init.image.pullPolicy }}
          env:
          - name: PG_HOST
            value: {{ .Values.database.timescale.host }}
          - name: PG_PASS
            value: {{ .Values.init.password }}
          - name: QL_DB_PASS
            value: {{ .Values.database.timescale.password }}
          - name: QL_DB_INIT_DIR
            value: "/init"
          resources:
{{ toYaml .Values.init.resources | indent 12 }}
          volumeMounts:
            - name: init
              mountPath: "/init"
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.internalPort }}
          env:
          - name: CRATE_HOST
            value: {{ .Values.database.crate.host }}
          - name: CRATE_DEFAULTDB
            value: {{ .Values.database.crate.defaultdb }}
          - name: POSTGRES_HOST
            value: {{ .Values.database.timescale.host }}
          - name: POSTGRES_PORT
            value: "{{ .Values.database.timescale.port }}"
          - name: POSTGRES_DB_NAME
            value: {{ .Values.database.timescale.name }}
          - name: POSTGRES_DB_USER
            value: {{ .Values.database.timescale.user }}
          - name: POSTGRES_DB_PASS
            value: {{ .Values.database.timescale.password }}
{{- if .Values.database.timescale.ssl }}
          - name: POSTGRES_USE_SSL
            value: t
{{- end }}
{{- if .Values.config }}
          - name: QL_CONFIG
            value: /config/config.yml
{{- end }}
          - name: USE_GEOCODING
            value: {{ .Values.geocoding.enabled | quote }}
          - name: REDIS_HOST
            value: {{ .Values.geocoding.redisHost }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
          {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          {{- if .Values.config }}
          volumeMounts:
            - name: config
              mountPath: /config/config.yml
              subPath: config.yml
          {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
      volumes:
      {{- if .Values.config }}
        - name: config
          configMap:
            name: {{ template "quantumleap.fullname" . }}
      {{- end }}
      {{- if .Values.init }}
        - name: init
          emptyDir: {}
      {{- end }}
