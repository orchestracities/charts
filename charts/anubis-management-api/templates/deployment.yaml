apiVersion: "apps/v1"
kind: Deployment
metadata:
  name: {{ template "anubis-management-api.fullname" . }}
  labels:
    app: {{ template "anubis-management-api.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "anubis-management-api.name" . }}
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  strategy:
{{ toYaml .Values.updateStrategy | indent 4 }}
  template:
    metadata:
      annotations:
        chaos.alpha.kubernetes.io/enabled: "{{ .Values.chaos.enabled }}"
      labels:
        app: {{ template "anubis-management-api.name" . }}
        release: {{ .Release.Name }}
    spec:
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}

      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.internalPort }}
          env:
{{ toYaml .Values.env | indent 12 }}
          livenessProbe:
            httpGet:
              path: /ping
              port: {{ .Values.service.internalPort }}
          readinessProbe:
            httpGet:
              path: /ping
              port: {{ .Values.service.internalPort }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
